var xmad = function(t, a) {
    try {
        var l = "wepy" === t;
    } catch (t) {}
    try {
        var e, n;
        if (t.prototype.constructor.name) "App" === a ? e = t : n = t;
    } catch (t) {}
    var f = require("./xmadx_conf.js"), s = require("./xmadx_MD5.js"), g = {};
    if (!f.app_key || 32 !== f.app_key.length) {
        console.warn("小盟提示：配置错误，请在xmadx_conf.js中正确配置您的app_key。");
        return {
            xmApp: function(t) {
                e ? e(t) : App(t);
            },
            xmPage: function(t) {
                n ? n(t) : Page(t);
            }
        };
    }
    var x = {
        ak: f.app_key.replace(/(^\s*)|(\s*$)/g, ""),
        v: "1.5.1",
        asid: "",
        reqid: "",
        pb: "",
        pm: "",
        sv: "",
        pv: "",
        nt: "",
        ww: 0,
        wh: 0,
        pr: 0,
        long: 0,
        lat: 0,
        wvv: "",
        wv: "",
        lang: "",
        wsr: {},
        pp: "",
        uuid: "",
        drop: {
            hasCollect: !1,
            hasSell: !1,
            hasCopy: !1
        },
        user_info: {}
    }, r = 0, c = function() {
        var t = void 0;
        try {
            if (t = wx.getStorageSync("xmaduuid")) return t;
        } catch (t) {}
        function a() {
            return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1);
        }
        t = a() + a() + a() + a() + a() + a() + a() + a();
        try {
            wx.setStorageSync("xmaduuid", t);
        } catch (t) {}
        return t;
    }, m = "pages/xmadPage/sell", h = "pages/xmadPage/collect", i = function(i, o, s, c) {
        if (s) return 32 != s.length ? console.warn("广告位ID应为长度为32位，请检查您在js中'xmad'的配置--" + s) : void p(s, [ "engine", "v1/api/ad" ], function(t) {
            if (200 == t.data.code) {
                var a = t.data.data;
                g[s] = a, g[s].hasshow = !0, g[s].id = s, g[s].push = 0;
                var e = function(t) {
                    switch (t) {
                      case 1:
                        return {
                            dTag: "xm_banner",
                            dClass: "banner_style"
                        };

                      case 2:
                        return {
                            dTag: "xm_insert",
                            dClass: "screen_style"
                        };

                      case 3:
                        return {
                            dTag: "xm_fixed",
                            dClass: "fixed_style"
                        };

                      default:
                        return;
                    }
                }(a.ct);
                if (e) {
                    g[s].style = D[e.dClass];
                    var n = o.data.xmad;
                    n.adData = g, l ? o.xmapply(g) : o.setData({
                        xmad: n
                    });
                }
            } else if (202 == t.data.code) {
                console.warn(i + "广告位ID" + s + "未匹配到广告");
                var r = o.data.xmad;
                r.empty || (r.empty = {}), "banner" == i && c ? (r.empty[i] || (r.empty[i] = []), 
                r.empty[i].push({
                    id: s,
                    reason: t.data.msg
                })) : r.empty[i] = {
                    id: s,
                    reason: t.data.msg
                }, o.setData({
                    xmad: r
                });
            }
        });
    }, p = function(t, a, e, n) {
        0 === r ? function(t) {
            var a = [];
            function e() {
                4 === a.length && (r = 1, t && t());
            }
            wx.getSetting({
                success: function(t) {
                    t.authSetting["scope.userInfo"] ? wx.getUserInfo({
                        withCredentials: !1,
                        success: function(t) {
                            x.user_info = t.userInfo;
                        },
                        complete: function() {
                            a.push("ok1"), e();
                        }
                    }) : (a.push("ok1"), e());
                },
                fail: function() {
                    a.push("ok1"), e();
                }
            }), wx.getSystemInfo({
                success: function(t) {
                    x.wv = void 0 === t.SDKVersion ? "1.0.0" : t.SDKVersion, x.pb = t.brand, x.pm = t.model, 
                    x.pr = t.pixelRatio, x.ww = t.screenWidth, x.wh = t.screenHeight, x.lang = t.language, 
                    x.wvv = t.version, x.sv = t.system, x.pv = t.platform;
                },
                complete: function() {
                    a.push("ok2"), e();
                }
            }), wx.getSetting({
                success: function(t) {
                    t.authSetting["scope.userLocation"] ? wx.getLocation({
                        type: "wgs84",
                        success: function(t) {
                            x.long = t.latitude, x.lat = t.longitude;
                        },
                        complete: function() {
                            a.push("ok3"), e();
                        }
                    }) : (a.push("ok3"), e());
                },
                fail: function() {
                    a.push("ok3"), e();
                }
            }), wx.getNetworkType({
                success: function(t) {
                    x.nt = t.networkType;
                },
                complete: function() {
                    a.push("ok4"), e();
                }
            });
        }(function() {
            o(t, e, a, n);
        }) : o(t, e, a, n);
    }, o = function(t, a, e, n) {
        n = n ? "get" : "post";
        var r = "https://" + e[0] + ".xmadx.net/";
        if (x.asid = t, x.uuid = x.uuid || c(), "log" != e[0]) {
            var i = Date.now() + x.ak + x.uuid + x.asid;
            x.reqid = s.hexMD5(i);
        }
        var o = 0;
        !function t() {
            wx.request({
                url: r + e[1],
                data: x,
                header: {},
                method: n,
                success: function(t) {
                    a(t);
                },
                fail: function() {
                    o < 2 && (o++, x.retryTimes = o, setTimeout(function() {
                        t();
                    }, 1e3));
                }
            });
        }();
    }, u = function(t) {
        x.uuid = c(), wx.setStorageSync("xmwsr", t);
    }, d = function() {
        var t;
        !function() {
            var t = !1, a = !1, e = !1;
            try {
                var n = __wxConfig.pages;
                t = n.some(function(t) {
                    return t === m;
                }), a = n.some(function(t) {
                    return t === h;
                }), e = n.some(function(t) {
                    return t === e;
                });
            } catch (t) {}
            x.drop.hasSell = t, x.drop.hasCollect = a, x.drop.hasCopy = e;
        }(), x.wsr = wx.getStorageSync("xmwsr"), x.pp = this.route;
        try {
            t = this.data.xmad.ad;
        } catch (t) {}
        if (t) {
            var a = this;
            for (var e in t) "banner" === e && "Array" === Object.prototype.toString.call(t[e]).split(" ")[1].slice(0, -1) ? t[e].forEach(function(t) {
                i(e, a, t, 1);
            }) : i(e, a, t[e]);
        }
    }, v = function() {
        var t = this.options.xmadH5url;
        t && (t = t.replace("|", "?").replace("$", "="), this.setData({
            xmadURL: t
        }));
    }, w = function(t, a) {
        var e = e ? "get" : "post", n = {};
        /imp/.test(a) ? n.iurl = t : n.curl = t;
        var r = 0;
        !function t() {
            wx.request({
                url: "https://log.xmadx.net/" + a,
                data: n,
                method: e ? "post" : "get",
                success: function() {},
                fail: function() {
                    r < 2 && (r++, n.retryTimes = r, setTimeout(function() {
                        t();
                    }, 1e3));
                }
            });
        }();
    }, y = function(t) {
        var e = t.currentTarget.dataset.id, a = g[e];
        if (0 === a.push) {
            var n = a.iurl.split("?")[1], r = this, i = wx.createIntersectionObserver(r, {
                thresholds: [ .2 ],
                selectAll: !0
            });
            if (1 === a.ct) i.relativeToViewport().observe(".xm_banner", function(t) {
                if (.2 < t.intersectionRatio) {
                    var a = r.data.xmad;
                    a.adData[e].push = 1, a.adData.baseURL = "https://log.xmadx.net/", r.setData({
                        xmad: a
                    }), w(n, "v1/api/imp"), i.disconnect();
                }
            }); else {
                var o = this.data.xmad;
                o.adData.ENV = 0, o.adData[e].push = 1, o.adData.baseURL = "https://log.xmadx.net/", 
                this.setData({
                    xmad: o
                }), w(n, "v1/api/imp");
            }
        }
    }, b = function(t) {
        var a = t.currentTarget.dataset.id, e = this.data.xmad;
        e.adData[a].hasshow = !1, this.setData({
            xmad: e
        });
    }, k = function(t) {
        var a = t.currentTarget.dataset.id, e = g[a].curl.replace(/cst=/gi, "cst=" + Date.now());
        e = e.split("?")[1];
        var n = g[a].at;
        switch (n) {
          case 1:
            var r = f.h5_path || l ? "/pages/xmadH5" : "/pages/xmadH5/xmadH5", i = g[a].h5link.replace("?", "|").replace("=", "$");
            i && wx.navigateTo({
                url: r + "?xmadH5url=" + i,
                success: function() {
                    w(e, "v1/api/clk");
                },
                fail: function() {
                    console.warn("小盟提示：跳转H5广告失败，请在xmadx_conf.js中正确配置h5_path字段。");
                }
            });
            break;

          case 2:
            t.currentTarget.dataset.adImgUrl || (t.currentTarget.dataset.adImgUrl = g[a].appimg), 
            wx.previewImage({
                current: t.currentTarget.dataset.adImgUrl,
                urls: [ t.currentTarget.dataset.adImgUrl ],
                success: function() {
                    w(e, "v1/api/clk");
                }
            });
            break;

          case 3:
          case 4:
            w(e, "v1/api/clk");
            break;

          case 5:
          case 6:
          case 7:
            var o, s = g[a].page, c = x.ak, p = x.uuid, u = g[a].isAccredit, d = g[a].curl.split("?")[1].replace(/=/gi, "!");
            1 == s.purpose && (o = h), 2 == s.purpose && (o = m), 3 == s.purpose && (o = "pages/xmadPage/copyInfo"), 
            o && wx.navigateTo({
                url: "/" + o + "?xmadPage=" + s.config + "&title=" + s.title + "&pagekey=" + s.page_key + "&appkey=" + c + "&ukey=" + p + "&hasAuth=" + u + "&bs=https://engine.xmadx.net/v1/api/&cu=" + d,
                success: function() {
                    w(e, "v1/api/clk");
                },
                fail: function(t) {
                    console.warn(t, "小盟提示：跳转失败，请检查内置广告页是否配置正确。");
                }
            });
            break;

          default:
            console.error("SDK错误：跳转类型at为：" + n + " ，不是约定的类型。无法进行跳转、点击上报，联系GO工程师！！！");
        }
    }, _ = function(t, a, e) {
        var n = t[a];
        t[a] = function(t) {
            n && n.call(this, t), e.call(this, t);
        };
    }, D = {
        banner_style: {
            wrap: "position: relative; display: flex; width: 100%; overflow: hidden",
            img: "width: 100%; margin: 0 auto;",
            icon: "position: absolute; left: 2rpx; bottom: 2rpx; width: 76rpx !important; height: 24rpx !important; line-height: 24rpx; background: rgba(0, 0, 0, .2); font-size: 16rpx; color: #fff; text-align: center; border-radius: 16rpx;",
            nav: "position: absolute; top: 0; right: 0; left: 0; bottom: 0; margin: 0; background: none;"
        },
        screen_style: {
            wrap: "position: fixed; width: 100%; height: 100%; left: 0; top: 0; background: rgba(0, 0, 0, .3); z-index: 9999;",
            content: "position: relative; display: flex; width: 600rpx !important; overflow: hidden; left: calc(50% - 300rpx); top: calc(50% - 250rpx)",
            img: "width: 100%;",
            close: "position: absolute; top: 0; right: 0; width: 34rpx !important; height: 34rpx !important; padding: 10rpx; z-index: 2",
            nav: "position: absolute; top: 0; right: 0; left: 0; bottom: 0; margin: 0; background: none;",
            icon: "position: absolute; left: 2rpx; bottom: 2rpx; width: 76rpx !important; height: 24rpx !important; line-height: 24rpx; background: rgba(0, 0, 0, .2); font-size: 16rpx; color: #fff; text-align: center; border-radius: 16rpx;"
        },
        fixed_style: {
            wrap: "position: fixed; display: flex; width: 120rpx !important; right: 60rpx; bottom: 60rpx; z-index: 9998;",
            img: "width: 100%;",
            nav: "position: absolute; top: 0; right: 0; left: 0; bottom: 0; margin: 0; background: none;"
        }
    };
    return {
        xmApp: function(t) {
            _(t, "onLaunch", u), e ? e(t) : App(t);
        },
        xmPage: function(t) {
            _(t, "onLoad", d), _(t, "onShow", v), _(t, "xmadClose", b), _(t, "adImgLoad", y), 
            _(t, "appoIntView", k), n ? n(t) : Page(t);
        }
    };
};

exports.xmad = xmad;